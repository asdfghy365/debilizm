ode_modules\@tact-lang\compiler\stdlib\stdlib.fc` `D:\Projects\tacttutor\tact-template
ode_modules\@tact-lang\compiler\stdlib\stdlib_ex.fc` `D:/Projects/tacttutor/tact-template/sources/output/contract_TestContract.code.fc` incl:`D:/Projects/tacttutor/tact-template/sources/output/contract_TestContract.headers.fc` incl:`D:/Projects/tacttutor/tact-template/sources/output/contract_TestContract.stdlib.fc` incl:`D:/Projects/tacttutor/tact-template/sources/output/contract_TestContract.constants.fc` incl:`D:/Projects/tacttutor/tact-template/sources/output/contract_TestContract.storage.fc` 
PROGRAM{
  DECLPROC __tact_verify_address
  DECLPROC __tact_load_address
  DECLPROC __tact_store_address
  DECLPROC __tact_my_balance
  DECLPROC __tact_not_null
  DECLPROC __tact_context_get
  DECLPROC __tact_context_get_sender
  DECLPROC __tact_store_bool
  DECLPROC __tact_dict_set_slice_int
  DECLPROC __tact_dict_get_slice_int
  DECLPROC __tact_dict_min_slice_int
  DECLPROC __tact_dict_next_slice_int
  DECLPROC __tact_slice_eq_bits
  DECLPROC __tact_slice_eq
  DECLPROC $Deploy$_load
  DECLPROC $DeployOk$_store
  DECLPROC $DeployOk$_store_cell
  DECLPROC $Data$_store
  DECLPROC $Data$_load
  DECLPROC $Finalize$_load
  DECLPROC $TestContract$_store
  DECLPROC $TestContract$_load
  DECLPROC $StateInit$_not_null
  DECLPROC $Context$_get_value
  DECLPROC $Data$_constructor_total_bet_a_total_bet_b_odds_a_odds_b_bets_a_bets_b_finalized_outcome_a_wins_insufficient_balance
  DECLPROC $TestContract$_contract_init
  DECLPROC $TestContract$_contract_load
  DECLPROC $TestContract$_contract_store
  DECLPROC $global_send
  DECLPROC $TestContract$_fun_handle_bet
  DECLPROC $TestContract$_fun_calculate_total_payout
  DECLPROC $SendParameters$_constructor_to_value_mode
  DECLPROC $TestContract$_fun_payout
  DECLPROC $TestContract$_fun_isInsufficientBalance
  DECLPROC $TestContract$_fun_getTotalBetA
  DECLPROC $TestContract$_fun_getTotalBetB
  DECLPROC $TestContract$_fun_getBalance
  DECLPROC $TestContract$_fun_getoddA
  DECLPROC $TestContract$_fun_getoddB
  DECLPROC $TestContract$_fun_outcome
  DECLPROC $TestContract$_fun_finalize
  DECLPROC $SendParameters$_constructor_bounce_to_value_mode_body_code_data
  DECLPROC $TestContract$_fun_forward
  DECLPROC $TestContract$_fun_reply
  DECLPROC $TestContract$_fun_notify
  DECLPROC $TestContract$_fun_requireOwner
  DECLPROC $TestContract$_fun_owner
  DECLPROC $TestContract$_fun_requireNotStopped
  DECLPROC $TestContract$_fun_stopped
  DECLPROC $DeployOk$_constructor_queryId
  DECLPROC $TestContract$_internal_text_ab5413c4bad5a887365be8fb105b98c9e248b5ff44ca9f33c801dd11ce29d60b
  DECLPROC $TestContract$_internal_text_69742cff251f5b948dc76100b6544580aaff8a55c4609f222ef7da35c1547d2d
  DECLPROC $TestContract$_internal_binary_Finalize
  DECLPROC $TestContract$_internal_any_text
  DECLPROC $TestContract$_internal_text_8f6033dcdaeb3a4c98eddef36eb561469faf81a06ab78e04942b4773a8a33de5
  DECLPROC $TestContract$_internal_text_a8cff6a082b5f7494597416974e7e86fb242d81901daa55b0066a7d01d6ac588
  DECLPROC $TestContract$_internal_binary_Deploy
  DECLPROC $TestContract$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501
  68330 DECLMETHOD %isInsufficientBalance
  116979 DECLMETHOD %getTotalBetA
  129168 DECLMETHOD %getTotalBetB
  106323 DECLMETHOD %getBalance
  96091 DECLMETHOD %getoddA
  83768 DECLMETHOD %getoddB
  106447 DECLMETHOD %outcome
  78104 DECLMETHOD %finalize
  83229 DECLMETHOD %owner
  74107 DECLMETHOD %stopped
  113617 DECLMETHOD supported_interfaces
  121275 DECLMETHOD get_abi_ipfs
  115390 DECLMETHOD lazy_deployment_completed
  DECLPROC $TestContract$_contract_router_internal
  DECLPROC recv_internal
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_context_sys
  DECLGLOBVAR __tact_randomized
  __tact_verify_address PROCINLINE:<{
    DUP
    SBITS
    267 PUSHINT
    EQUAL
    136 THROWIFNOT
    DUP
    11 PLDU
    DUP
    1279 PUSHINT
    EQUAL
    137 THROWIF
    10 PUSHPOW2
    EQUAL
    136 THROWIFNOT
  }>
  __tact_load_address PROCINLINE:<{
    LDMSGADDR
    SWAP
    __tact_verify_address INLINECALLDICT
  }>
  __tact_store_address PROCINLINE:<{
    __tact_verify_address INLINECALLDICT
    STSLICER
  }>
  __tact_my_balance PROCINLINE:<{
    BALANCE
    FIRST
  }>
  __tact_not_null PROCINLINE:<{
    DUP
    ISNULL
    128 THROWIF
  }>
  __tact_context_get PROCINLINE:<{
    __tact_context GETGLOB
    4 UNTUPLE
  }>
  __tact_context_get_sender PROCINLINE:<{
    __tact_context_sender GETGLOB
  }>
  __tact_store_bool PROCINLINE:<{
    SWAP
    1 STI
  }>
  __tact_dict_set_slice_int PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      -ROT
      DICTDEL
      DROP
    }>ELSE<{
      NEWC
      SWAP
      STIX
      s1 s3 s3 XCHG3
      DICTSETB
    }>
  }>
  __tact_dict_get_slice_int PROCINLINE:<{
    s1 s3 s3 XCHG3
    DICTGET
    NULLSWAPIFNOT
    IF:<{
      SWAP
      LDIX
      DROP
    }>ELSE<{
      2DROP
      PUSHNULL
    }>
  }>
  __tact_dict_min_slice_int PROCINLINE:<{
    -ROT
    DICTMIN
    NULLSWAPIFNOT2
    DUP
    IF:<{
      s2 s3 XCHG2
      LDIX
      DROP
      ROT
    }>ELSE<{
      2 1 BLKDROP2
      PUSHNULL
      s2 POP
      PUSHNULL
      SWAP
    }>
  }>
  __tact_dict_next_slice_int PROCINLINE:<{
    s1 s3 s3 XCHG3
    DICTGETNEXT
    NULLSWAPIFNOT2
    DUP
    IF:<{
      s2 s3 XCHG2
      LDIX
      DROP
      ROT
    }>ELSE<{
      2 1 BLKDROP2
      PUSHNULL
      s2 POP
      PUSHNULL
      SWAP
    }>
  }>
  __tact_slice_eq_bits PROCINLINE:<{
    SDEQ
  }>
  __tact_slice_eq PROCINLINE:<{
    SWAP
    HASHSU
    SWAP
    HASHSU
    EQUAL
  }>
  $Deploy$_load PROCINLINE:<{
    32 LDU
    SWAP
    2490013878 PUSHINT
    EQUAL
    129 THROWIFNOT
    64 LDU
    SWAP
  }>
  $DeployOk$_store PROCINLINE:<{
    2952335191 PUSHINT
    ROT
    32 STU
    64 STU
  }>
  $DeployOk$_store_cell PROCINLINE:<{
    NEWC
    SWAP
    $DeployOk$_store INLINECALLDICT
    ENDC
  }>
  $Data$_store PROCREF:<{
    s8 s9 XCHG2
    32 STU
    s1 s6 XCHG
    32 STU
    s1 s4 XCHG
    32 STU
    s1 s2 XCHG
    32 STU
    STDICT
    STDICT
    1 STI
    1 STI
    1 STI
  }>
  $Data$_load PROCREF:<{
    32 LDU
    32 LDU
    32 LDU
    32 LDU
    LDDICT
    LDDICT
    1 LDI
    1 LDI
    1 LDI
    9 -ROLL
  }>
  $Finalize$_load PROCINLINE:<{
    32 LDU
    SWAP
    3527127190 PUSHINT
    EQUAL
    129 THROWIFNOT
    1 LDI
    SWAP
  }>
  $TestContract$_store PROCINLINE:<{
    s11 s10 XCHG2
    __tact_store_address INLINECALLDICT
    s1 s8 XCHG
    1 STI
    s0 s9 XCHG
    s6 s8 XCHG
    s5 s7 XCHG
    s4 s6 XCHG
    s3 s5 XCHG
    s4 s0 s3 XCHG3
    s0 s2 XCHG
    $Data$_store INLINECALLDICT
  }>
  $TestContract$_load PROCINLINE:<{
    __tact_load_address INLINECALLDICT
    SWAP
    1 LDI
    $Data$_load INLINECALLDICT
    s9 s11 XCHG
    s9 s10 XCHG
  }>
  $StateInit$_not_null PROCINLINE:<{
    DUP
    ISNULL
    128 THROWIF
    2 UNTUPLE
  }>
  $Context$_get_value PROCINLINE:<{
    s1 s3 XCHG
    3 BLKDROP
  }>
  $Data$_constructor_total_bet_a_total_bet_b_odds_a_odds_b_bets_a_bets_b_finalized_outcome_a_wins_insufficient_balance PROCINLINE:<{
  }>
  $TestContract$_contract_init PROCREF:<{
    __tact_context_get_sender INLINECALLDICT
    FALSE
    0 PUSHINT
    DUP
    1000 PUSHINT
    DUP
    PUSHNULL
    PUSHNULL
    FALSE
    FALSE
    FALSE
    $Data$_constructor_total_bet_a_total_bet_b_odds_a_odds_b_bets_a_bets_b_finalized_outcome_a_wins_insufficient_balance INLINECALLDICT
  }>
  $TestContract$_contract_load PROCREF:<{
    c4 PUSH
    CTOS
    LDREF
    SWAP
    __tact_context_sys SETGLOB
    1 LDI
    SWAP
    IFJMP:<{
      $TestContract$_load INLINECALLDICT
      1 11 BLKDROP2
    }>
    DROP
    MYADDR
    11 PLDU
    10 PUSHPOW2
    EQUAL
    137 THROWIFNOT
    $TestContract$_contract_init INLINECALLDICT
  }>
  $TestContract$_contract_store PROCINLINE:<{
    NEWC
    __tact_context_sys GETGLOB
    SWAP
    STREF
    TRUE
    SWAP
    1 STI
    11 -ROLL
    $TestContract$_store INLINECALLDICT
    ENDC
    c4 POP
  }>
  $global_send PROCREF:<{
    NEWC
    1 PUSHINT
    SWAP
    2 STI
    s0 s7 XCHG2
    __tact_store_bool INLINECALLDICT
    0 PUSHINT
    SWAP
    3 STI
    s0 s5 XCHG2
    __tact_store_address INLINECALLDICT
    s0 s3 XCHG2
    STGRAMS
    0 PUSHINT
    SWAP
    105 STI
    s3 PUSH
    ISNULL
    NOT
    IF:<{
      TRUE
    }>ELSE<{
      s4 PUSH
      ISNULL
      NOT
    }>
    IF:<{
      TRUE
      __tact_store_bool INLINECALLDICT
      NEWC
      FALSE
      __tact_store_bool INLINECALLDICT
      FALSE
      __tact_store_bool INLINECALLDICT
      s4 PUSH
      ISNULL
      NOT
      IF:<{
        TRUE
        __tact_store_bool INLINECALLDICT
        s0 s4 XCHG
        __tact_not_null INLINECALLDICT
        s0 s4 XCHG2
        STREF
      }>ELSE<{
        s4 POP
        s0 s3 XCHG
        FALSE
        __tact_store_bool INLINECALLDICT
      }>
      s4 PUSH
      ISNULL
      NOT
      IF:<{
        TRUE
        __tact_store_bool INLINECALLDICT
        s0 s4 XCHG
        __tact_not_null INLINECALLDICT
        s0 s4 XCHG2
        STREF
      }>ELSE<{
        s4 POP
        s0 s3 XCHG
        FALSE
        __tact_store_bool INLINECALLDICT
      }>
      FALSE
      __tact_store_bool INLINECALLDICT
      s0 s2 XCHG
      TRUE
      __tact_store_bool INLINECALLDICT
      s0 s2 XCHG
      ENDC
      ROT
      STREF
    }>ELSE<{
      s3 POP
      s3 POP
      SWAP
      FALSE
      __tact_store_bool INLINECALLDICT
    }>
    OVER
    ISNULL
    NOT
    IF:<{
      TRUE
      __tact_store_bool INLINECALLDICT
      SWAP
      __tact_not_null INLINECALLDICT
      SWAP
      STREF
    }>ELSE<{
      NIP
      FALSE
      __tact_store_bool INLINECALLDICT
    }>
    ENDC
    SWAP
    SENDRAWMSG
  }>
  $TestContract$_fun_handle_bet PROCREF:<{
    s7 POP
    s7 POP
    63076 PUSHINT
    s3 PUSH
    NOT
    THROWANYIFNOT
    __tact_context_get_sender INLINECALLDICT
    s0 s7 XCHG
    IF:<{
      s8 s5 XCPU
      ADD
      s4 PUSH
      267 PUSHINT
      s8 PUSH
      257 PUSHINT
      __tact_dict_get_slice_int INLINECALLDICT
      DUP
      ISNULL
      NOT
      IF:<{
        __tact_not_null INLINECALLDICT
        s0 s6 XCHG2
        ADD
      }>ELSE<{
        DROP
        s0 s5 XCHG
      }>
      s2 s4 XCHG
      267 PUSHINT
      s0 s7 s7 XCHG3
      257 PUSHINT
      __tact_dict_set_slice_int INLINECALLDICT
    }>ELSE<{
      s7 s5 XCPU
      ADD
      s3 PUSH
      267 PUSHINT
      s8 PUSH
      257 PUSHINT
      __tact_dict_get_slice_int INLINECALLDICT
      DUP
      ISNULL
      NOT
      IF:<{
        __tact_not_null INLINECALLDICT
        s0 s6 XCHG2
        ADD
      }>ELSE<{
        DROP
        s0 s5 XCHG
      }>
      s2 s3 XCHG
      267 PUSHINT
      s0 s7 s7 XCHG3
      257 PUSHINT
      __tact_dict_set_slice_int INLINECALLDICT
      s5 s6 XCHG
      s3 s5 XCHG
      ROT
    }>
    s3 PUSH
    0 GTINT
    IF:<{
      s5 PUSH
      1000 PUSHINT
      MUL
      s4 PUSH
      DIV
    }>ELSE<{
      1000 PUSHINT
    }>
    s6 PUSH
    0 GTINT
    IF:<{
      s4 PUSH
      1000 PUSHINT
      MUL
      s7 PUSH
      DIV
    }>ELSE<{
      1000 PUSHINT
    }>
    s0 s5 XCHG
    s4 s6 s8 XCHG3
  }>
  $TestContract$_fun_calculate_total_payout PROCREF:<{
    0 PUSHINT
    s2 PUSH
    267 PUSHINT
    257 PUSHINT
    __tact_dict_min_slice_int INLINECALLDICT
    WHILE:<{
    }>DO<{
      DUP
      ISNULL
      NOT
      IF:<{
        s0 s3 PUSH2
        MUL
        1000 PUSHINT
        DIV
        SWAP
        ADD
        s1 s2 XCHG
        ADD
        SWAP
      }>ELSE<{
        DROP
      }>
      267 PUSHINT
      s4 PUSH
      s0 s2 XCHG
      257 PUSHINT
      __tact_dict_next_slice_int INLINECALLDICT
    }>
    s2 s4 XCHG
    4 BLKDROP
  }>
  $SendParameters$_constructor_to_value_mode PROCINLINE:<{
    TRUE
    3 -ROLL
    PUSHNULL
    PUSHNULL
    PUSHNULL
  }>
  $TestContract$_fun_payout PROCREF:<{
    s10 s12 XCHG
    5 8 REVERSE
    s7 s11 XCHG
    s6 s12 XCHG
    s5 s11 XCHG
    s4 s12 XCHG
    s3 s11 XCHG
    s12 s11 s12 XCHG3
    s11 s12 PUSH2
    $TestContract$_fun_calculate_total_payout INLINECALLDICT
    __tact_my_balance INLINECALLDICT
    SWAP
    LESS
    IFJMP:<{
      DROP
      2 10 BLKDROP2
      TRUE
    }>
    s11 PUSH
    267 PUSHINT
    257 PUSHINT
    __tact_dict_min_slice_int INLINECALLDICT
    WHILE:<{
    }>DO<{
      s3 PUSH
      IF:<{
        s0 s14 PUSH2
        MUL
        1000 PUSHINT
        DIV
        SWAP
        90 MULCONST
        100 PUSHINT
        DIV
        ADD
        s1 s(-1) PUXC
        66 PUSHINT
        $SendParameters$_constructor_to_value_mode INLINECALLDICT
        $global_send INLINECALLDICT
      }>ELSE<{
        s0 s14 PUSH2
        MUL
        1000 PUSHINT
        DIV
        SWAP
        90 MULCONST
        100 PUSHINT
        DIV
        ADD
        s1 s(-1) PUXC
        66 PUSHINT
        $SendParameters$_constructor_to_value_mode INLINECALLDICT
        $global_send INLINECALLDICT
      }>
      267 PUSHINT
      s13 PUSH
      s0 s2 XCHG
      257 PUSHINT
      __tact_dict_next_slice_int INLINECALLDICT
    }>
    2DROP
    2 11 BLKDROP2
  }>
  $TestContract$_fun_isInsufficientBalance PROCREF:<{
    DUP
  }>
  $TestContract$_fun_getTotalBetA PROCREF:<{
    s8 PUSH
  }>
  $TestContract$_fun_getTotalBetB PROCREF:<{
    s7 PUSH
  }>
  $TestContract$_fun_getBalance PROCREF:<{
    __tact_my_balance INLINECALLDICT
  }>
  $TestContract$_fun_getoddA PROCREF:<{
    s6 PUSH
  }>
  $TestContract$_fun_getoddB PROCREF:<{
    s5 PUSH
  }>
  $TestContract$_fun_outcome PROCREF:<{
    OVER
  }>
  $TestContract$_fun_finalize PROCREF:<{
    s2 PUSH
  }>
  $SendParameters$_constructor_bounce_to_value_mode_body_code_data PROCINLINE:<{
  }>
  $TestContract$_fun_forward PROCREF:<{
    PUSHNULL
    PUSHNULL
    s2 PUSH
    ISNULL
    NOT
    IF:<{
      2DROP
      $StateInit$_not_null INLINECALLDICT
      SWAP
    }>ELSE<{
      s2 POP
    }>
    s2 s4 XCHG
    0 PUSHINT
    s0 s3 XCHG
    s0 s4 XCHG
    66 PUSHINT
    s2 s3 XCHG2
    $SendParameters$_constructor_bounce_to_value_mode_body_code_data INLINECALLDICT
    $global_send INLINECALLDICT
  }>
  $TestContract$_fun_reply PROCINLINE:<{
    __tact_context_get_sender INLINECALLDICT
    SWAP
    TRUE
    PUSHNULL
    $TestContract$_fun_forward INLINECALLDICT
  }>
  $TestContract$_fun_notify PROCINLINE:<{
    __tact_context_get_sender INLINECALLDICT
    SWAP
    FALSE
    PUSHNULL
    $TestContract$_fun_forward INLINECALLDICT
  }>
  $TestContract$_fun_requireOwner PROCREF:<{
    __tact_context_get_sender INLINECALLDICT
    s11 s(-1) PUXC
    __tact_slice_eq_bits INLINECALLDICT
    132 THROWIFNOT
  }>
  $TestContract$_fun_owner PROCREF:<{
    s10 PUSH
  }>
  $TestContract$_fun_requireNotStopped PROCREF:<{
    40368 PUSHINT
    s10 PUSH
    NOT
    THROWANYIFNOT
  }>
  $TestContract$_fun_stopped PROCREF:<{
    s9 PUSH
  }>
  $DeployOk$_constructor_queryId PROCINLINE:<{
  }>
  $TestContract$_internal_text_ab5413c4bad5a887365be8fb105b98c9e248b5ff44ca9f33c801dd11ce29d60b PROCINLINE:<{
    63076 PUSHINT
    s3 PUSH
    NOT
    THROWANYIFNOT
    __tact_context_get INLINECALLDICT
    $Context$_get_value INLINECALLDICT
    TRUE
    SWAP
    $TestContract$_fun_handle_bet INLINECALLDICT
  }>
  $TestContract$_internal_text_69742cff251f5b948dc76100b6544580aaff8a55c4609f222ef7da35c1547d2d PROCINLINE:<{
    63076 PUSHINT
    s3 PUSH
    NOT
    THROWANYIFNOT
    __tact_context_get INLINECALLDICT
    $Context$_get_value INLINECALLDICT
    FALSE
    SWAP
    $TestContract$_fun_handle_bet INLINECALLDICT
  }>
  $TestContract$_internal_binary_Finalize PROCINLINE:<{
    2 2 BLKDROP2
    49684 PUSHINT
    __tact_context_get_sender INLINECALLDICT
    s11 s(-1) PUXC
    __tact_slice_eq_bits INLINECALLDICT
    THROWANYIFNOT
    TRUE
    s0 s2 XCHG
  }>
  $TestContract$_internal_any_text PROCINLINE:<{
    49684 PUSHINT
    __tact_context_get_sender INLINECALLDICT
    s13 s(-1) PUXC
    __tact_slice_eq_bits INLINECALLDICT
    THROWANYIFNOT
    B{b5ee9c7241010101000f00001a66696e616c697a655f7472756549fcb5e5} B>boc <s PUSHSLICE
    OVER
    __tact_slice_eq INLINECALLDICT
    IF:<{
      s1 s3 XCHG
      3 BLKDROP
      TRUE
      TRUE
    }>ELSE<{
      B{b5ee9c72410101010006000008506179417d16f24c} B>boc <s PUSHSLICE
      OVER
      __tact_slice_eq INLINECALLDICT
      IF:<{
        s1 s3 XCHG
        3 BLKDROP
        TRUE
        TRUE
        s2 s4 s6 XCPU2
        $TestContract$_fun_payout INLINECALLDICT
      }>ELSE<{
        B{b5ee9c724101010100060000085061794289e5a25f} B>boc <s PUSHSLICE
        SWAP
        __tact_slice_eq INLINECALLDICT
        IF:<{
          s2 POP
          TRUE
          s2 s3 s5 XCPU2
          $TestContract$_fun_payout INLINECALLDICT
        }>ELSE<{
        }>
      }>
      s0 s2 XCHG
    }>
    s0 s2 XCHG
  }>
  $TestContract$_internal_text_8f6033dcdaeb3a4c98eddef36eb561469faf81a06ab78e04942b4773a8a33de5 PROCINLINE:<{
    4396 PUSHINT
    __tact_context_get_sender INLINECALLDICT
    s12 s(-1) PUXC
    __tact_slice_eq_bits INLINECALLDICT
    THROWANYIFNOT
    s4 s6 PUSH2
    $TestContract$_fun_calculate_total_payout INLINECALLDICT
    DROP
  }>
  $TestContract$_internal_text_a8cff6a082b5f7494597416974e7e86fb242d81901daa55b0066a7d01d6ac588 PROCINLINE:<{
    4396 PUSHINT
    __tact_context_get_sender INLINECALLDICT
    s12 s(-1) PUXC
    __tact_slice_eq_bits INLINECALLDICT
    THROWANYIFNOT
    s4 s6 PUSH2
    $TestContract$_fun_calculate_total_payout INLINECALLDICT
    DROP
  }>
  $TestContract$_internal_binary_Deploy PROCINLINE:<{
    $DeployOk$_constructor_queryId INLINECALLDICT
    $DeployOk$_store_cell INLINECALLDICT
    $TestContract$_fun_notify INLINECALLDICT
  }>
  $TestContract$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501 PROCINLINE:<{
    $TestContract$_fun_requireOwner INLINECALLDICT
    $TestContract$_fun_requireNotStopped INLINECALLDICT
    s9 POP
    TRUE
    B{b5ee9c7241010101000d0000160000000053746f707065646f94ddb2} B>boc PUSHREF
    s1 s10 XCHG
    $TestContract$_fun_reply INLINECALLDICT
  }>
  %isInsufficientBalance PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_isInsufficientBalance INLINECALLDICT
    11 1 BLKDROP2
  }>
  %getTotalBetA PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_getTotalBetA INLINECALLDICT
    11 1 BLKDROP2
  }>
  %getTotalBetB PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_getTotalBetB INLINECALLDICT
    11 1 BLKDROP2
  }>
  %getBalance PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_getBalance INLINECALLDICT
    11 1 BLKDROP2
  }>
  %getoddA PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_getoddA INLINECALLDICT
    11 1 BLKDROP2
  }>
  %getoddB PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_getoddB INLINECALLDICT
    11 1 BLKDROP2
  }>
  %outcome PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_outcome INLINECALLDICT
    11 1 BLKDROP2
  }>
  %finalize PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_finalize INLINECALLDICT
    11 1 BLKDROP2
  }>
  %owner PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_owner INLINECALLDICT
    11 1 BLKDROP2
  }>
  %stopped PROC:<{
    $TestContract$_contract_load INLINECALLDICT
    $TestContract$_fun_stopped INLINECALLDICT
    11 1 BLKDROP2
  }>
  supported_interfaces PROC:<{
    123515602279859691144772641439386770278 PUSHINT
    209801025412363888721030803524359905849 PUSHINT
    42980537499636128163026532310500881091 PUSHINT
    209474421377847335869795010607481022628 PUSHINT
    86142586315491086060343270784266291122 PUSHINT
    192989407141549587419771644724066226057 PUSHINT
  }>
  get_abi_ipfs PROC:<{
    x{697066733a2f2f516d655176614a7a50624a57675863626838674454457850346e55595a4c6f6970756e324a75555a675463616d70} PUSHSLICE
  }>
  lazy_deployment_completed PROC:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
  }>
  $TestContract$_contract_router_internal PROCREF:<{
    c2 SAVE
    SAMEALTSAVE
    SWAP
    IFJMP:<{
      DROP
      TRUE
    }>
    0 PUSHINT
    OVER
    SBITS
    31 GTINT
    IF:<{
      DROP
      DUP
      32 PLDU
    }>
    DUP
    3527127190 PUSHINT
    EQUAL
    IFJMP:<{
      DROP
      $Finalize$_load INLINECALLDICT
      NIP
      $TestContract$_internal_binary_Finalize INLINECALLDICT
      TRUE
    }>
    DUP
    2490013878 PUSHINT
    EQUAL
    IFJMP:<{
      DROP
      $Deploy$_load INLINECALLDICT
      NIP
      $TestContract$_internal_binary_Deploy INLINECALLDICT
      TRUE
    }>
    0 EQINT
    IF:<{
      DUP
      HASHSU
      DUP
      77494048698186052660122829516938790422579140609043242735003776192628325471755 PUSHINT
      EQUAL
      IFJMP:<{
        2DROP
        $TestContract$_internal_text_ab5413c4bad5a887365be8fb105b98c9e248b5ff44ca9f33c801dd11ce29d60b INLINECALLDICT
        TRUE
        RETALT
      }>
      DUP
      47698113916292376885555840405928649629643658941209572167987956992229504220461 PUSHINT
      EQUAL
      IFJMP:<{
        2DROP
        $TestContract$_internal_text_69742cff251f5b948dc76100b6544580aaff8a55c4609f222ef7da35c1547d2d INLINECALLDICT
        TRUE
        RETALT
      }>
      DUP
      64850712608932618184623464593929732674506848145317873863331133023233908096485 PUSHINT
      EQUAL
      IFJMP:<{
        2DROP
        $TestContract$_internal_text_8f6033dcdaeb3a4c98eddef36eb561469faf81a06ab78e04942b4773a8a33de5 INLINECALLDICT
        TRUE
        RETALT
      }>
      DUP
      76355998061356110397499217566527563193237031683286895061456992496539407140232 PUSHINT
      EQUAL
      IFJMP:<{
        2DROP
        $TestContract$_internal_text_a8cff6a082b5f7494597416974e7e86fb242d81901daa55b0066a7d01d6ac588 INLINECALLDICT
        TRUE
        RETALT
      }>
      85478235227686204299312064008631277118150318603456584517510472216578858763521 PUSHINT
      EQUAL
      IFJMP:<{
        DROP
        $TestContract$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501 INLINECALLDICT
        TRUE
        RETALT
      }>
      DUP
      SBITS
      31 GTINT
      IFJMP:<{
        32 PUSHINT
        SDSKIPFIRST
        $TestContract$_internal_any_text INLINECALLDICT
        TRUE
        RETALT
      }>
      DROP
    }>ELSE<{
      DROP
    }>
    FALSE
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    NEGATE
    SWAP
    LDMSGADDR
    SWAP
    __tact_verify_address INLINECALLDICT
    s0 s4 s2 PUXCPU
    s0 s3 XCHG
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $TestContract$_contract_load INLINECALLDICT
    2 11 BLKSWAP
    $TestContract$_contract_router_internal INLINECALLDICT
    130 THROWIFNOT
    $TestContract$_contract_store INLINECALLDICT
  }>
}END>c
