#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "contract_TestContract.headers.fc";
#include "contract_TestContract.stdlib.fc";
#include "contract_TestContract.constants.fc";
#include "contract_TestContract.storage.fc";

;;
;; Contract TestContract functions
;;

(slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $TestContract$_contract_init(int $seqno) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = (null(), null(), null(), null(), null());
    $self'owner = __tact_context_get_sender();
    $self'stopped = false;
    $self'seqno = $seqno;
    ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance) = $Data$_constructor_total_bet_a_total_bet_b_odds_a_odds_b_bets_a_bets_b_bets_total_finalized_outcome_a_wins_insufficient_balance(0, 0, 1000, 1000, null(), null(), null(), false, false, false);
    ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b) = $BetInfo$_constructor_title_source_bet_a_name_bet_b_name_image_finishDate_odds_a_odds_b_total_bet_a_total_bet_b(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), (- 1), $self'data'odds_a, $self'data'odds_b, $self'data'total_bet_a, $self'data'total_bet_b);
    return ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b));
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_fun_handle_bet((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, int $bet_on_a, int $bet_amount) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    throw_unless(63076, (~ $self'data'finalized));
    slice $sender_address = __tact_context_get_sender();
    if ($bet_on_a) {
        $self'data'total_bet_a = $self'data'total_bet_a + $bet_amount;
        int $current_bet = __tact_dict_get_slice_int($self'data'bets_a, 267, $sender_address, 257);
        int $final_bet = ((~ null?($current_bet)) ? (__tact_not_null($current_bet) + $bet_amount) : $bet_amount);
        $self'data'bets_a~__tact_dict_set_slice_int(267, $sender_address, $final_bet, 257);
        $self'data'bets_total~__tact_dict_set_slice_int(267, $sender_address, $final_bet, 257);
    } else {
        $self'data'total_bet_b = $self'data'total_bet_b + $bet_amount;
        int $current_bet_b = __tact_dict_get_slice_int($self'data'bets_b, 267, $sender_address, 257);
        int $final_bet_b = ((~ null?($current_bet_b)) ? (__tact_not_null($current_bet_b) + $bet_amount) : $bet_amount);
        $self'data'bets_b~__tact_dict_set_slice_int(267, $sender_address, $final_bet_b, 257);
        $self'data'bets_total~__tact_dict_set_slice_int(267, $sender_address, $final_bet_b, 257);
    }
    if (($self'data'total_bet_a > 0)) {
        $self'data'odds_a = (((($self'data'total_bet_b * 1000) / $self'data'total_bet_a) * 95) / 100);
    } else {
        $self'data'odds_a = 1000;
    }
    if (($self'data'total_bet_b > 0)) {
        $self'data'odds_b = (((($self'data'total_bet_a * 1000) / $self'data'total_bet_b) * 95) / 100);
    } else {
        $self'data'odds_b = 1000;
    }
    $self'betInfoData'odds_a = $self'data'odds_a;
    $self'betInfoData'odds_b = $self'data'odds_b;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_calculate_total_payout((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, cell $bets, int $odds) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    int $total_payout = 0;
    var ($address, $bet_amount, $fresh$flag_0) = __tact_dict_min_slice_int($bets, 267, 257);
    while ($fresh$flag_0) {
        if ((~ null?($bet_amount))) {
            $total_payout = $total_payout + ((($bet_amount * $odds) / 1000) + $bet_amount);
        }
        ($address, $bet_amount, $fresh$flag_0) = __tact_dict_next_slice_int($bets, 267, $address, 257);
    }
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $total_payout);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_fun_payout((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, cell $bets, int $odds) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    int $total_payout = ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_calculate_total_payout($bets, $odds);
    int $contract_balance = __tact_my_balance();
    int $payout_ratio_numerator = 1000000;
    int $payout_ratio_denominator = 1000000;
    if (($contract_balance < $total_payout)) {
        $self'data'insufficient_balance = true;
        $payout_ratio_numerator = ($contract_balance * 1000000);
        $payout_ratio_denominator = $total_payout;
    }
    var ($address, $bet_amount, $fresh$flag_1) = __tact_dict_min_slice_int($bets, 267, 257);
    while ($fresh$flag_1) {
        if ($self'data'outcome_a_wins) {
            int $payout_amount = (($bet_amount * $odds) / 1000);
            int $adjusted_bet_amount = (($bet_amount * 90) / 100);
            int $rewards_payoutA = ($payout_amount + $adjusted_bet_amount);
            int $total_payout_amount = ($adjusted_bet_amount + $rewards_payoutA);
            if ($self'data'insufficient_balance) {
                $total_payout_amount = (($total_payout_amount * $payout_ratio_numerator) / $payout_ratio_denominator);
                $global_send($SendParameters$_constructor_to_value_mode($address, $total_payout_amount, (64 + 2)));
            } else {
                $global_send($SendParameters$_constructor_to_value_mode($address, $rewards_payoutA, (64 + 2)));
            }
        } else {
            int $payout_amount = (($bet_amount * $odds) / 1000);
            int $adjusted_bet_amount = (($bet_amount * 90) / 100);
            int $rewards_payoutB = ($payout_amount + $adjusted_bet_amount);
            int $total_payout_amount = ($adjusted_bet_amount + $rewards_payoutB);
            if ($self'data'insufficient_balance) {
                $total_payout_amount = (($total_payout_amount * $payout_ratio_numerator) / $payout_ratio_denominator);
                $global_send($SendParameters$_constructor_to_value_mode($address, $total_payout_amount, (64 + 2)));
            } else {
                $global_send($SendParameters$_constructor_to_value_mode($address, $rewards_payoutB, (64 + 2)));
            }
        }
        ($address, $bet_amount, $fresh$flag_1) = __tact_dict_next_slice_int($bets, 267, $address, 257);
    }
    $self'data'finalized = true;
    $self'betInfoData'finishDate = now();
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_fun_chargeback((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, cell $bets) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    var ($address, $bet_amount, $fresh$flag_2) = __tact_dict_min_slice_int($bets, 267, 257);
    while ($fresh$flag_2) {
        if ((~ null?($bet_amount))) {
            int $refund_amount = (($bet_amount * 95) / 100);
            $global_send($SendParameters$_constructor_to_value_mode($address, $refund_amount, (64 + 2)));
        }
        ($address, $bet_amount, $fresh$flag_2) = __tact_dict_next_slice_int($bets, 267, $address, 257);
    }
    $self'data'finalized = true;
    $self'betInfoData'finishDate = now();
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_fun_sendRemainingBalanceToOwner((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    throw_unless(20388, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $global_send($SendParameters$_constructor_to_value_mode($self'owner, 0, (128 + 2)));
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_payoutStatus((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'data'insufficient_balance);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_getTotalBetA((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'data'total_bet_a);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_getTotalBetB((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'data'total_bet_b);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_getBalance((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), __tact_my_balance());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_getoddA((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'data'odds_a);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_getoddB((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'data'odds_b);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_outcome((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'data'outcome_a_wins);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_finalize((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'data'finalized);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), (slice, slice, slice, slice, slice, int, int, int, int, int)) $TestContract$_fun_getBetInfo((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b));
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_fun_requireOwner((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), slice) $TestContract$_fun_owner((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'owner);
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_fun_requireNotStopped((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    throw_unless(40368, (~ $self'stopped));
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_fun_stopped((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline_ref {
    var (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))) = $self;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), $self'stopped);
}

;;
;; Receivers of a Contract TestContract
;;

(((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int))), ()) $TestContract$_internal_binary_BetInfoInit((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, (slice, slice, slice, slice, slice) $msg) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    var ($msg'title, $msg'source, $msg'bet_a_name, $msg'bet_b_name, $msg'image) = $msg;
    throw_unless(2977, ( (( (( (( (__tact_slice_eq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $self'betInfoData'bet_a_name)) ? (__tact_slice_eq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $self'betInfoData'bet_b_name)) : (false) )) ? (__tact_slice_eq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $self'betInfoData'image)) : (false) )) ? (__tact_slice_eq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $self'betInfoData'title)) : (false) )) ? (__tact_slice_eq(__gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7(), $self'betInfoData'source)) : (false) ));
    ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b) = $BetInfo$_constructor_title_source_bet_a_name_bet_b_name_image_odds_a_odds_b_finishDate_total_bet_a_total_bet_b($msg'title, $msg'source, $msg'bet_a_name, $msg'bet_b_name, $msg'image, $self'data'odds_a, $self'data'odds_b, $self'betInfoData'finishDate, $self'data'total_bet_a, $self'data'total_bet_b);
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_internal_text_ab5413c4bad5a887365be8fb105b98c9e248b5ff44ca9f33c801dd11ce29d60b((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    throw_unless(63076, (~ $self'data'finalized));
    int $bet_amount = $Context$_get_value(__tact_context_get());
    slice $sender_address = __tact_context_get_sender();
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_handle_bet(true, $bet_amount);
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_internal_text_69742cff251f5b948dc76100b6544580aaff8a55c4609f222ef7da35c1547d2d((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    throw_unless(63076, (~ $self'data'finalized));
    int $bet_amount = $Context$_get_value(__tact_context_get());
    slice $sender_address = __tact_context_get_sender();
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_handle_bet(false, $bet_amount);
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

(((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int))), ()) $TestContract$_internal_binary_Finalize((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    var ($msg'outcome_a_wins) = $msg;
    throw_unless(49684, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    $self'data'finalized = true;
    $self'betInfoData'finishDate = now();
    $self'data'outcome_a_wins = $msg'outcome_a_wins;
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_internal_any_text((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, slice $msg) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    throw_unless(49684, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    if (__tact_slice_eq(__gen_slice_string_9f81c186e5ad0517b5fcceaf78de38deb3b32d60883492410282297087a0097b(), $msg)) {
        $self'data'outcome_a_wins = true;
        $self'data'finalized = true;
    } elseif (__tact_slice_eq(__gen_slice_string_1a4c437794f951038f842dff8ae1c99f10cb1101fb1019a616b27b27724340a6(), $msg)) {
        $self'data'outcome_a_wins = true;
        $self'data'finalized = true;
        ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_payout($self'data'bets_a, $self'data'odds_a);
    } elseif (__tact_slice_eq(__gen_slice_string_98651548fbed19fe5d2f9e15197454cbe1d40f76a381a82876b277fde6645ae6(), $msg)) {
        $self'data'finalized = true;
        ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_payout($self'data'bets_b, $self'data'odds_b);
    } else {
        __tact_nop();
    }
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_internal_text_a724187afb678ba0ac26b7b57049d3a9225e34ebece690d5af6b77a326666a55((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_chargeback($self'data'bets_total);
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_internal_text_095190194aee611ce895c5503adf85fd864de7905746142f608d3eb2faad14e4((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_sendRemainingBalanceToOwner();
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

(((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int))), ()) $TestContract$_internal_binary_Deploy((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), ()) $TestContract$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) $self) impure inline {
    var ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)) = $self;
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_requireOwner();
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_requireNotStopped();
    $self'stopped = true;
    ($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b))~$TestContract$_fun_reply(__gen_cell_comment_8f4b6a166554b4f282855d0333c627d5b58d281ea4ba11e4def91a1053193b2d());
    return (($self'owner, $self'stopped, ($self'data'total_bet_a, $self'data'total_bet_b, $self'data'odds_a, $self'data'odds_b, $self'data'bets_a, $self'data'bets_b, $self'data'bets_total, $self'data'finalized, $self'data'outcome_a_wins, $self'data'insufficient_balance), $self'seqno, ($self'betInfoData'title, $self'betInfoData'source, $self'betInfoData'bet_a_name, $self'betInfoData'bet_b_name, $self'betInfoData'image, $self'betInfoData'odds_a, $self'betInfoData'odds_b, $self'betInfoData'finishDate, $self'betInfoData'total_bet_a, $self'betInfoData'total_bet_b)), ());
}

;;
;; Get methods of a Contract TestContract
;;

_ %payoutStatus() method_id(77247) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_payoutStatus();
    return res;
}

_ %getTotalBetA() method_id(116979) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_getTotalBetA();
    return res;
}

_ %getTotalBetB() method_id(129168) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_getTotalBetB();
    return res;
}

_ %getBalance() method_id(106323) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_getBalance();
    return res;
}

_ %getoddA() method_id(96091) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_getoddA();
    return res;
}

_ %getoddB() method_id(83768) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_getoddB();
    return res;
}

_ %outcome() method_id(106447) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_outcome();
    return res;
}

_ %finalize() method_id(78104) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_finalize();
    return res;
}

_ %getBetInfo() method_id(95159) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_getBetInfo();
    return $BetInfo$_to_external(res);
}

_ %owner() method_id(83229) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_owner();
    return res;
}

_ %stopped() method_id(74107) {
    var self = $TestContract$_contract_load();
    var res = self~$TestContract$_fun_stopped();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128,
        "org.ton.stoppable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmSgbCWJaxvCJsMZzyweJekQqYPenXSzB1mEdFcmS4J6qo";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract TestContract
;;

((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)), int) $TestContract$_contract_router_internal((slice, int, (int, int, int, int, cell, cell, cell, int, int, int), int, (slice, slice, slice, slice, slice, int, int, int, int, int)) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive BetInfoInit message
    if (op == 2955413279) {
        var msg = in_msg~$BetInfoInit$_load();
        self~$TestContract$_internal_binary_BetInfoInit(msg);
        return (self, true);
    }
    
    ;; Receive Finalize message
    if (op == 3527127190) {
        var msg = in_msg~$Finalize$_load();
        self~$TestContract$_internal_binary_Finalize(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$TestContract$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "1" message
        if (text_op == 0xab5413c4bad5a887365be8fb105b98c9e248b5ff44ca9f33c801dd11ce29d60b) {
            self~$TestContract$_internal_text_ab5413c4bad5a887365be8fb105b98c9e248b5ff44ca9f33c801dd11ce29d60b();
            return (self, true);
        }
        
        ;; Receive "2" message
        if (text_op == 0x69742cff251f5b948dc76100b6544580aaff8a55c4609f222ef7da35c1547d2d) {
            self~$TestContract$_internal_text_69742cff251f5b948dc76100b6544580aaff8a55c4609f222ef7da35c1547d2d();
            return (self, true);
        }
        
        ;; Receive "chargeback" message
        if (text_op == 0xa724187afb678ba0ac26b7b57049d3a9225e34ebece690d5af6b77a326666a55) {
            self~$TestContract$_internal_text_a724187afb678ba0ac26b7b57049d3a9225e34ebece690d5af6b77a326666a55();
            return (self, true);
        }
        
        ;; Receive "withdraw" message
        if (text_op == 0x095190194aee611ce895c5503adf85fd864de7905746142f608d3eb2faad14e4) {
            self~$TestContract$_internal_text_095190194aee611ce895c5503adf85fd864de7905746142f608d3eb2faad14e4();
            return (self, true);
        }
        
        ;; Receive "Stop" message
        if (text_op == 0xbcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501) {
            self~$TestContract$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501();
            return (self, true);
        }
        if (slice_bits(in_msg) >= 32) {
            self~$TestContract$_internal_any_text(in_msg.skip_bits(32));
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $TestContract$_contract_load();
    
    ;; Handle operation
    int handled = self~$TestContract$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $TestContract$_contract_store(self);
}
